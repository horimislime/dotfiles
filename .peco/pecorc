# command history
function peco-select-history() {
    BUFFER=$(fc -ln 1 | eval tail -r | peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle accept-line
    zle clear-screen
}
zle -N peco-select-history
bindkey '^x^r' peco-select-history

# kill process
function peco-proc () {
    ps ax -o pid,lstart,command | peco --query "$LBUFFER" | awk '{print $1}' | xargs kill
    zle clear-screen
}         
zle -N peco-proc
bindkey '^x^p' peco-proc

# find files under git source control
function list-files-under-git () {
    local branch=$(git branch -a | peco | tr -d ' ' | tr -d '*')
    if [ -n "$branch" ]; then 
        if [ -n "$LBUFFER" ]; then
            local new_left="${LBUFFER%\ } $branch"
        else
            local new_left="$branch"
        fi
        BUFFER=${new_left}${RBUFFER}
        CURSOR=${#new_left}
    fi
}         
zle -N list-files-under-git
bindkey '^x^g' list-files-under-git

# find git branches
function git-branches () {
    local branch=$(git branch -a | peco | tr -d ' ' | tr -d '*')
    if [ -n "$branch" ]; then
        if [ -n "$LBUFFER" ]; then
            local new_left="${LBUFFER%\ } $branch"
        else
            local new_left="$branch"
        fi
        BUFFER=${new_left}${RBUFFER}
        CURSOR=${#new_left}
    fi
}         
zle -N git-branches
bindkey '^x^b' git-branches

function peco-dir () {
    local selected_dir=$(ghq list --full-path | peco --query "$LBUFFER")
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
    zle clear-screen
}
zle -N peco-dir
bindkey '^x^g' peco-dir

function peco-show-issues() {
    local selected_issue=$(ghi list --filter | peco --query "$LBUFFER")
    if [ -n "$selected_issue" ]; then
        BUFFER="ghi show -w ${selected_issue}"
        zle accept-line
    fi
    zle clear-screen
}

zle -N peco-show-issues
bindkey '^x^i' peco-show-issues
